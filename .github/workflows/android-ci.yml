name: Android CI - build apk and release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      V2RAY_PREBUILT_URL: ${{ vars.V2RAY_PREBUILT_URL }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Prepare v2ray binaries (download if provided)
        if: env.V2RAY_PREBUILT_URL != ''
        run: |
          echo "Downloading v2ray prebuilt archive..."
          curl -L "$V2RAY_PREBUILT_URL" -o v2ray_prebuilt.zip
          unzip -q v2ray_prebuilt.zip -d v2ray_prebuilt
          mkdir -p app/src/main/jniLibs
          cp -r v2ray_prebuilt/jniLibs/* app/src/main/jniLibs/ || true
      - name: Build Debug APK
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.7
          arguments: assembleDebug --stacktrace --no-daemon
      - name: Run unit tests
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.7
          arguments: test --no-daemon
      - name: Sign APK (optional)
        if: ${{ secrets.KEYSTORE_BASE64 != '' }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 --decode > release.keystore
          echo 'Signing release APK if exists...'
          if ls app/build/outputs/apk/release/*-unsigned.apk 1> /dev/null 2>&1; then
            UNSIGNED_APK=$(ls app/build/outputs/apk/release/*-unsigned.apk | head -n 1)
            jarsigner -keystore release.keystore -storepass "$KEYSTORE_PASSWORD" -keypass "$KEY_PASSWORD" "$UNSIGNED_APK" "$KEY_ALIAS"
            zipalign -v -p 4 "$UNSIGNED_APK" "${UNSIGNED_APK%-unsigned.apk}-signed.apk"
          fi
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mcv-apk
          path: |
            app/build/outputs/apk/debug/*.apk
            app/build/outputs/apk/release/*.apk
      - name: Create GitHub Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            app/build/outputs/apk/debug/*.apk
            app/build/outputs/apk/release/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}